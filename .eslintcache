[{"C:\\Users\\ayush\\OneDrive\\Desktop\\coda\\src\\index.js":"1","C:\\Users\\ayush\\OneDrive\\Desktop\\coda\\src\\reportWebVitals.js":"2","C:\\Users\\ayush\\OneDrive\\Desktop\\coda\\src\\App.js":"3","C:\\Users\\ayush\\OneDrive\\Desktop\\coda\\src\\components\\navbar.component.js":"4","C:\\Users\\ayush\\OneDrive\\Desktop\\coda\\src\\components\\home\\main.comonent.js":"5","C:\\Users\\ayush\\OneDrive\\Desktop\\coda\\src\\components\\home\\table.component.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":225,"mtime":1610539670039,"results":"10","hashOfConfig":"8"},{"size":849,"mtime":1610545271087,"results":"11","hashOfConfig":"8"},{"size":1050,"mtime":1610535811060,"results":"12","hashOfConfig":"8"},{"size":2939,"mtime":1610544565812,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1rnfnya",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\ayush\\OneDrive\\Desktop\\coda\\src\\index.js",[],["29","30"],"C:\\Users\\ayush\\OneDrive\\Desktop\\coda\\src\\reportWebVitals.js",[],"C:\\Users\\ayush\\OneDrive\\Desktop\\coda\\src\\App.js",[],"C:\\Users\\ayush\\OneDrive\\Desktop\\coda\\src\\components\\navbar.component.js",[],"C:\\Users\\ayush\\OneDrive\\Desktop\\coda\\src\\components\\home\\main.comonent.js",["31"],"import React , {Component} from 'react'\r\nimport axios from 'axios'\r\nimport Tables from './table.component'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default class Main extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            players :[]\r\n\r\n        };\r\n        \r\n    }\r\n    componentDidMount(){\r\n        const op = axios({\r\n            method: 'get',\r\n            url: \"https://s3-ap-southeast-1.amazonaws.com/he-public-data/bets7747a43.json\"\r\n          }).then(response=>{this.setState({players:response.data})},error=> console.log(\"there is an error in fetching data\"))\r\n    }\r\n\r\n    render(){\r\n        const {players} = this.state\r\n        console.log(players)\r\n        return(\r\n\r\n            <main>\r\n                <div className =\"container box\">\r\n                    <h6> Select playing 9</h6>\r\n                    <TextField id=\"standard-basic\" label=\"search\"/>\r\n                </div>\r\n                <Tables players = {players}/>\r\n            </main>\r\n        )\r\n    }\r\n}","C:\\Users\\ayush\\OneDrive\\Desktop\\coda\\src\\components\\home\\table.component.js",["32","33","34"],"import React, {Component} from 'react'\r\nimport AttachMoneyRoundedIcon from '@material-ui/icons/AttachMoneyRounded';\r\nimport PersonOutlinedIcon from '@material-ui/icons/PersonOutlined';\r\nimport Navbar from '../navbar.component'\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nclass Tables extends Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            selected_id : [],\r\n            selected_profile:[]\r\n        \r\n        }\r\n    }\r\n\r\n    getid = (id,key)=>{\r\n        console.log(id)\r\n        console.log(key)\r\n        if (this.state.selected_id.includes(id)){\r\n            this.setState({selected_id:this.state.selected_id.filter(atr => atr != id)}) \r\n            this.setState({selected_profile:this.state.selected_profile.filter(atr => atr.Name !== key.Name)})   \r\n        }\r\n        else{\r\n        this.setState({selected_id:this.state.selected_id.concat(id)})\r\n        this.setState({selected_profile:this.state.selected_profile.concat(key)})\r\n        }\r\n    \r\n    }\r\n\r\n    render(){\r\n        const {selected_id,selected_profile} = this.state\r\n        console.log(selected_id)\r\n        console.log(selected_profile)\r\n        return(\r\n            <div>\r\n                \r\n                <div className=\"table-responsive tableFixHead table-sm\">\r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr className=\"table-row\" >\r\n                                <th> SELECT</th>\r\n                                <th> PLAYER NAME </th>\r\n                                <th> <AttachMoneyRoundedIcon style={{ color: 'yellow' }}/>PRICE</th>\r\n                                <th> <PersonOutlinedIcon/> AVATAR</th>\r\n                                <th> BET </th>\r\n                                <th> WINS </th>\r\n                                <th> LOST </th>\r\n                                </tr>        \r\n                            </thead>\r\n                            <tbody>        \r\n                            {this.props.players.map(atr=>{return(<tr className=\"table-row\">\r\n                            <td id ={atr.Name}><input type =\"checkbox\" onClick={() =>this.getid(atr.Name,{Name:atr.Name,Avatar: atr.['Profile Image'], Price : atr.Price})} ></input></td>\r\n                                <td>{atr.Name}</td>\r\n                                <td>{atr.Price}</td>\r\n                                <td><img src={atr['Profile Image']} style={{widht:\"50px\",height:\"50px\"}}></img></td>\r\n                                <td>{atr.Bet}</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                 </tr>)})}\r\n\r\n                            </tbody>\r\n                        </table>\r\n            </div>\r\n            \r\n      <Navbar selects = {selected_profile} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Tables",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":17,"column":15,"nodeType":"41","messageId":"42","endLine":17,"endColumn":17},{"ruleId":"39","severity":1,"message":"43","line":5,"column":10,"nodeType":"41","messageId":"42","endLine":5,"endColumn":16},{"ruleId":"44","severity":1,"message":"45","line":23,"column":81,"nodeType":"46","messageId":"47","endLine":23,"endColumn":83},{"ruleId":"48","severity":1,"message":"49","line":58,"column":37,"nodeType":"50","endLine":58,"endColumn":106},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'op' is assigned a value but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]